UserDAO line 16 constructor:
should I try/catch and throw it again here, this would be an redudant issue, maybe then just try/catch and throw?

UserDAO getCustomer(int phone)
    -figure out how to take a string and use that as claus (make "" inside "")
    -salt password

ServiceDAO
    -Should i send the connection as parameter everytime or create a method that establishes the connection?
    -should I move material method into OrderDAO or have Material/shed creatig be in serviceDAO for now?

DAO's
Should all methods be static, I then create a method that I call everytime to get connection
Should I create the connection inside each method? <-- this seems bad too

getAllEmployees:
is left join to none-maintainable and what should I instead do with role?
    -Thinking that maybe i could use Roles entity and ask for ordinal() some way?

Exceptions
    - worried that i throw to much and it becomes to chaotic see UserDAO/UseFacade as example
    - Thinking about using command pattern for exceptions but it strikes me as overkill since it's still the same place the exception will be thrown
    - Would like talk of how to handle exceptions in DAO compared to other places, should they still end up at servlet?

Facade
    Keep making UserDAO how can i only make it once as singleton w/o exceptions ?

Servet CreateCustomer
    I can recover from this mistake, should I just redirect back to create page?

JUnit
Should I refactor the test i repeat into a class and somehow execute those test on every class?


Late in the game:
Consider travis/jenkins --> build from github
Junit - I could make phoneGenerator/username generator


