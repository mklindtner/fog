quickSribble:
    -Create auto-generated shed after customer orders

Stykliste:
    få lavet entities med mål i db og hent dem i BoM
    hent enhed i basen
    find antal gennem calculator
    refactor methods so I only take amount, length and secondDescription
    Employee must be able to edit stykListe

SVG:
calculate offset off rafters so they work specific

Orders:
add OrderDAO
    -Consider shedDAO
    -make shed possible for OrderDAO
        -create private shedOrder, use for "available" and others
    -create list of orders and display those
    -createOrderwithoutShed should not have a status? see servlet and fix status there
    -display stykliste and svg for employee


Design
    createUser
        confirm password
    NavBar
        make sure index redirects proberly
    OrdersWithoutShed //this is wierd consider deleting this and find a way to just display orders w/without shed
        create new jsp page for this one, change to that tab
    Employee Homepage
        see rejected offers (able to throw them out too)
        see date for offers that are still awaiting customer approval (able to throw them out too)
        figure out why it doesn't update when you "take order" from ordersAvailable
    Customer homepage (current)
        make choice required
    Customer Orders
        Be able to "cancel order"
    Employee navbar
        create "find customer"
    Employee
        create logout the same way

    Customer Orders (pagination)
        same for employee (late)

    Logger
        add more logger to servlet

    NSL

    Ask
        Logger writes message create nw log every time

    Index
        Send thank you for the order notifcation
        create all options
        validations

Servlet
    -create logger for errors

extra Design:
    Employee
        have a way to find users orders etc. (use findCustomerServlet & send a new redirect)


    Index
        make sure you can order on frontpage, add extra column "contact information" can be null

JUnit:
Create test for customer login
Create test for reg_date for customer/employee
    -remove the milliseconds in mysql
Create test for id for customer/employee
    -mby create method in dao
Create test for Facades(is that REALLY neccessary?)
Refactor so that service instantiates tabels and drops them later
OrderDAOTEST
    - should have generator added with order method that returns order
    - Figure out why I get a integrityConstraintError when I run more than two tests?111+!?!?!!?


MysqlConnector:
Find out why I can't find my own created environment variable
    -when solved: set developmentState depending on local or remote environemnt



Currently:
OrderDAO - createOrder
orderDAO - createMaterial